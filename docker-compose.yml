version: "3"

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: bash -c "mvn clean install && java -jar target/myapi-0.0.1-SNAPSHOT.jar"
    ports:
      - "8080:8080"
    restart: always
    expose:
      - 8080
    depends_on:
      - mysqldb
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/myapi
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
    networks:
      - backend
      - frontend
    
  mysqldb:
    image: mysql:8.0.25
    platform: linux/x86_64
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: myapi
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend
    
  encoder:
    build:
      context: ./encoder
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - api
    networks:
      - backend
      
  mailer:
    build: ./mailer
    volumes:
     - .:/mailer
    network_mode: host
    extra_hosts:
      - "host.docker.internal:host-gateway"


  front:
    build: ./front
    container_name: my_youtube_front
    restart: always
    ports:
      - "8085:3000"
    command: "npm run start"
    depends_on:
      - api
    networks:
      - frontend
      - backend


volumes:
  mysql-data:
  
networks:
  backend:
  frontend:
